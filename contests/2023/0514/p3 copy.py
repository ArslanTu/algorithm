from typing import List


class Solution:
    def maxMoves(self, grid: List[List[int]]) -> int:
        m, n = len(grid), len(grid[0])
        dp = [[0 for _ in range(n)] for _ in range(m)]


        for j in range(n - 1, 0, -1):
            for i in range(m):
                if i > 0 and grid[i - 1][j - 1] < grid[i][j]:
                    dp[i - 1][j - 1] = max(dp[i - 1][j - 1], dp[i][j] + 1)

                if grid[i][j - 1] < grid[i][j]:
                    dp[i][j - 1] = max(dp[i][j - 1], dp[i][j] + 1)

                if i < m - 1 and grid[i + 1][j - 1] < grid[i][j]:
                    dp[i + 1][j - 1] = max(dp[i + 1][j - 1], dp[i][j] + 1)

        return max([dp[i][0] for i in range(m)])





sl = Solution()
# p1 = [[1000000,92910,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068],[1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118]]
# p1 = [[2,4,3,5],[5,4,9,3],[3,4,2,11],[10,9,13,15]]
# p1 = [[3,2,4],[2,1,9],[1,1,7]]
p1 = [[266,18,114,208,14,133,248,68,185,27,86,236],[272,192,226,97,244,202,18,28,150,183,166,167],[64,211,163,292,12,16,211,158,133,272,275,12],[276,208,94,264,44,180,293,50,84,167,34,249],[152,283,205,142,276,273,244,180,19,14,83,238],[237,240,26,38,299,143,219,7,147,25,129,219],[268,58,46,211,16,296,173,192,91,75,99,151]]
print(sl.maxMoves(p1))